package com.example.accessingdatapostgresql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller.
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path).
public class MainController {
    @Autowired // This means to get the bean called userRepository
            // Which is auto-generated by Spring, we will use it to handle the data.
    private TableRepository tableRepository;

    @PostMapping(path="/add") // Map only POST Requests.
    public @ResponseBody String addNewRecord(@RequestParam String name, @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name.
        // @RequestParam means it is a parameter from the GET or POST request.

        MyTable t = new MyTable();
        t.setName(name);
        t.setEmail(email);
        tableRepository.save(t);
        return "Saved";
    }

    @GetMapping(path="/all") // Map only GET Requests.
    public @ResponseBody Iterable<MyTable> getAllUsers() {
        // This returns a JSON or XML with the users.
        return tableRepository.findAll();
    }

}
